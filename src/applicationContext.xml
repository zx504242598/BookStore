<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" xmlns:tx="http://www.springframework.org/schema/tx">

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3307/bookstore">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
		<!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="150"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="5"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="20"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="30"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/>  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
    <property name="validationQuery" value="SELECT NOW() FROM DUAL"/>  
	</bean> 
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>org/model/Book.hbm.xml</value>
				<value>org/model/Catalog.hbm.xml</value>
				<value>org/model/Orderitem.hbm.xml</value>
				<value>org/model/Orders.hbm.xml</value>
				<value>org/model/User.hbm.xml</value></list>
		</property></bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	<!-- 基础配置 -->
	<bean id="BaseDao" class="org.dao.BaseDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<!-- 用户注册登陆配置 -->
	<bean id="UserDao" class="org.dao.impl.UserDapImpl" parent="BaseDao"></bean>
	<bean id="UserService" class="org.service.impl.UserServiceImpl">
		<property name="userDao" ref="UserDao"></property>
	</bean>
	<bean id="LoginAction" class="org.action.LoginAction" scope="prototype">
		<property name="userService" ref="UserService"></property>
	</bean>
	
	
	<!-- 图书分类配置 -->
	<bean id="CatalogDao" class="org.dao.impl.CatalogDaoImpl" parent="BaseDao"></bean>
	<bean id="CatalogService" class="org.service.impl.CatalogServiceImpl">
		<property name="catalogDao" ref="CatalogDao"></property>
	</bean>
	
	
	
	<!-- 图书管理配置 -->
	<bean id="BookDao" class="org.dao.impl.BookDaoImpl" parent="BaseDao"></bean>
	<bean id="BookService" class="org.service.impl.BookServiceImpl">
		<property name="bookDao" ref="BookDao"> </property>
	</bean>
	<bean id="BookAction" class="org.action.BookAction">
		 <property name="bookService" ref="BookService"></property>
		<property name="catalogService" ref="CatalogService"></property>
	</bean>
	
	
	
	<!-- 购物管理配置 -->
	<bean id="ShoppingAction" class="org.action.ShoppingAction">
	 	<property name="bookService" ref="BookService"></property>
	 	<property name="orderService" ref="OrderService"></property>
	</bean>
	
	<!-- 订单管理配置 -->
	<bean id="OrderDao" class="org.dao.impl.OrderDaoImpl" parent="BaseDao"></bean>
	<bean id="OrderService" class="org.service.impl.OrderServiceImpl">
		<property name="orderDao" ref="OrderDao"></property>
	</bean>
	
	
	
	
	
	</beans>